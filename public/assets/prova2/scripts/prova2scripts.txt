document.addEventListener('DOMContentLoaded', function() {
    const config = window.SIMULAETEC_CONFIG || {};
    const PROVA2_ASSETS = config.PROVA2_ASSETS || '';

    const questionsContainer = document.getElementById('questions-container');
    const submitBtn = document.getElementById('enviar-respostas');

    // Lista de questões 
    const questions= [
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/intro.png', requiresAnswer: false },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest1.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest2.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest3a4img.png', requiresAnswer: false },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest4.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest5.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest6a9img.png', requiresAnswer: false },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest6.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest7.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest8.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest9.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest10a11img.png', requiresAnswer: false },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest10.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest11.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest12.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest13.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest14.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest15.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest16.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest17.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest18a19img.png', requiresAnswer: false },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest18.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest19.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest20.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest21.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest22.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest23a24img.png', requiresAnswer: false },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest23.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest24.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest25.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest26a28img.png', requiresAnswer: false },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest26.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest27.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest28.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest29.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest30.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest31.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest32.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest33.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest34a36img.png', requiresAnswer: false },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest34.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest35.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest36.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest37.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest38.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest39a40img.png', requiresAnswer: false },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest39.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest40.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest41.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest42.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest43.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest44.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest45.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest46.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest47.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest48.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest49.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/quest50.png', requiresAnswer: true },
        { image: PROVA2_ASSETS + '<?= PROVA2_ASSETS ?>imgs/imgprovas/gabarito.png', requiresAnswer: false }
    ];


    // Classe para criar questões
    class QuestionBuilder {
        constructor(questions) {
            this.questions = questions;
        }

        createQuestionElement(question, index) {
            const article = document.createElement('article');
            article.className = 'post';
            article.dataset.questao = index;

            // Conteúdo da imagem
            const postContent = document.createElement('div');
            postContent.className = 'post-content';

            const img = document.createElement('img');
            img.src = question.image;
            img.className = 'quest-image';
            img.alt = `Questão ${index}`;

            postContent.appendChild(img);
            article.appendChild(postContent);

            // Se precisar de resposta, adiciona o formulário
            if (question.requiresAnswer) {
                article.appendChild(this.createAnswerForm(index));
            }

            return article;
        }

        createAnswerForm(questionNumber) {
            const answerSection = document.createElement('div');
            answerSection.className = 'answer-section';

            const form = document.createElement('form');
            form.id = `form-questao-${questionNumber}`;
            form.className = 'alternative-answers';

            // Adiciona opções de A a E
            ['A', 'B', 'C', 'D', 'E'].forEach((option, i) => {
                const optionDiv = document.createElement('div');
                optionDiv.className = 'answer-option';

                const input = document.createElement('input');
                input.type = 'radio';
                input.id = `q${questionNumber}-option-${option.toLowerCase()}`;
                input.name = `resposta-q${questionNumber}`;
                input.value = option;

                const label = document.createElement('label');
                label.htmlFor = input.id;
                label.textContent = `(${option})`;

                optionDiv.appendChild(input);
                optionDiv.appendChild(label);
                form.appendChild(optionDiv);
            });

            answerSection.appendChild(form);
            return answerSection;
        }

        renderAllQuestions() {
            this.questions.forEach((question, index) => {
                questionsContainer.appendChild(
                    this.createQuestionElement(question, index)
                );
            });
        }
    }

    // Classe para gerenciar o simulado
    class SimuladoManager {
        constructor() {
            this.questionBuilder = new QuestionBuilder(questions);
            this.respostas = [];
        }

        init() {
            this.questionBuilder.renderAllQuestions();
            this.setupEventListeners();
        }

        setupEventListeners() {
            submitBtn.addEventListener('click', () => this.processarRespostas());
        }

        processarRespostas() {
            this.respostas = [];
            document.querySelectorAll('[data-questao]').forEach(questao => {
                const numQuestao = questao.dataset.questao;
                if (numQuestao === "0") return;

                const formId = `form-questao-${numQuestao}`;
                const form = document.getElementById(formId);
                const resposta = form.querySelector('input[type="radio"]:checked')?.value;

                this.respostas.push({
                    questao: numQuestao,
                    resposta: resposta || null
                });
            });

            console.log('Respostas:', this.respostas);
            // adicionar o envio para o servidor
        }
    }

    // Inicializa o simulado
    const simulado = new SimuladoManager();
    simulado.init();
});